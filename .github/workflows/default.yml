name: Go

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

env:
  GO_VERSION: '1.20'
  SERVER_USERNAME: 'ubuntu'
  APP_VERSION: ${{ github.run_number }}

jobs:
  build:
    name: "Building"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Building
        run: go build -mod=vendor -v ./...

  lint:
      name: "Linting"
      runs-on: ubuntu-latest

      steps:
        - name: Checkout repo
          uses: actions/checkout@v3

        - name: Setup go
          uses: actions/setup-go@v4
          with:
            go-version: ${{ env.GO_VERSION }}

        - name: Install
          run: go install github.com/mgechev/revive@latest

        - name: Lint
          run: revive -config ./config/revive.toml

  test:
    name: "Testing"
    runs-on: ubuntu-latest
    needs: [build, lint]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Test
        run: go test ./...

  deploy:
    if: github.ref == 'refs/heads/main'
    name: "Deploying"
    needs: [test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PSWD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Server
        uses: docker/build-push-action@v4
        with:
            push: true
            context: .
            tags: ivaaahn/collector-server:${{ env.APP_VERSION }}
            file: docker/base/Dockerfile

      - name: Build and Push Migrations
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          tags: ivaaahn/collector-migrations:${{ env.APP_VERSION }}
          file: docker/base/Dockerfile.migrations

      - name: Downing Docker Compose
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ env.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker compose -f ./prod/docker-compose.yml down && 
            docker kill $(docker ps -q) && docker rm $(docker ps -a -q) || true

      - name: Creating .env
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PSWD: ${{ secrets.DB_PSWD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          cat <<EOF > ./docker/prod/.env
          APP_VERSION="${{ env.APP_VERSION }}"
          DB_USER="$DB_USER"
          DB_PSWD="$DB_PSWD"
          DB_NAME="$DB_NAME"
          BOT_TOKEN="$BOT_TOKEN"
          EOF
        shell: bash

      - name: Copying files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ env.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker/prod"
          target: ~/prod/
          overwrite: true
          tar_tmp_path: ~/
          strip_components: 2

      - name: Deploying
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ env.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "${{ secrets.DOCKERHUB_PSWD }}" | docker login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin 
            docker compose -f ./prod/docker-compose.yml up -d --remove-orphans
